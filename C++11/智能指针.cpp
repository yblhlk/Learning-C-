/** 1.为什么需要RAII？
 *内存泄漏是C++饱受诟病的一点，忘记delete导致的内存泄漏，异常安全问题导致的内存泄漏……
 * 内存泄漏无处不在，防不胜防，有没有办法能自动释放内存空间？
 */

/** 2.RAII是什么？
 * 对于这个问题，有大佬提出了RAII技术
 * RAII（Resource Acquisition Is Initialization）是一种利用对象生命周期来控制程序资源（如内存、文件句柄、网络连接、互斥量等等）的技术
 * 它的原理很简单，即：在构造函数中申请资源，在析构函数中释放资源。
 * 像这样将资源的获取和释放与对象的生命周期绑定，实现了资源的自动管理，避免了内存泄露等问题。

 * 总结：RAII是C++中一种重要的编程范式，它通过将资源的获取和释放与对象的生命周期绑定，实现了资源的自动管理，避免了内存泄露等问题。
 */

/** 3.什么是智能指针？
 *  智能指针就是基于RAII编程范式而编写的一系列类模板，
 *  它提供了自动内存管理（自动释放所指向的对象），
 *  且在类中重载了-> 和 * 运算符，让我们能像指针一样使用该类模板，故叫智能指针。
 
 * 智能指针主要解决了两个问题：
 * a. 自动释放内存：当智能指针对象生命周期结束时（例如离开作用域），它会自动删除所指向的对象。这通过析构函数中的delete操作符实现。
 * b. 防止野指针：野指针是指已经被释放的内存的指针。智能指针通过确保在析构时删除所指向的对象，并在之后将指针设置为nullptr（或类似无效值），从而防止野指针的出现。
 */